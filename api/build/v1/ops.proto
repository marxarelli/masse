syntax = "proto3";
package wikimedia.dduvall.phyton;

option go_package = "gitlab.wikimedia.org/dduvall/phyton/api/build/v1";

import "protoyaml/options.proto";

message Op {
  option (protoyaml.delegate) = "op";

  oneof op {
    option (protoyaml.delegate_match) = DELEGATE_MATCH_FIRST_KEY;

    Local local = 1;
    Image image = 2;
    Git git = 3;
    Run run = 4;
    Copy copy = 5;
  }
}

message Local {
  message Option {
    option (protoyaml.delegate) = "opt";

    oneof opt {
      option (protoyaml.delegate_match) = DELEGATE_MATCH_FIRST_KEY;

      Glob include = 1;
      Glob exclude = 2;
      Path follow_path = 3;
      string cache_key_hint = 4;
      Differ differ = 5;
    }
  }

  string name = 1;
  repeated Option options = 2;
}

message Image {
  message Option {
    option (protoyaml.delegate) = "opt";

    oneof opt {
      option (protoyaml.delegate_match) = DELEGATE_MATCH_FIRST_KEY;

      Platform platform = 1;
      uint32 layer_limit = 2;
    }
  }

  string ref = 1;
  repeated Option options = 2;
}

message Run {
  message Option {
    option (protoyaml.delegate) = "opt";

    oneof opt {
      option (protoyaml.delegate_match) = DELEGATE_MATCH_FIRST_KEY;

      Host host = 1;
      Mount mount = 2;
      Env env = 3;
      Cache cache = 4;
      Tmpfs tmpfs = 5;
      bool readonly = 6;
    }
  }

  string command = 1;
  repeated string arguments = 2;
  repeated Option options = 3;
}

message Copy {
  message Option {
    option (protoyaml.delegate) = "opt";

    oneof opt {
      option (protoyaml.delegate_match) = DELEGATE_MATCH_FIRST_KEY;

      Timestamp ctime = 1;
      string user = 2;
      int32 uid = 3;
      string group = 4;
      int32 gid = 5;
      uint32 mode = 6;
      bool follow_symlinks = 7;
      bool copy_dir_content = 8;
      Glob include = 9;
      Glob exclude = 10;
    }
  }

  string source = 1;
  Filesystem from = 2;
  string destination = 3;
  repeated Option options = 4;
}

message Git {
  string remote = 1;
  string ref = 2;
}

message Host {
  string name = 1;
  string ip = 2;
}

message Mount {
  string target = 1;
  Filesystem from = 2;
  string source = 3;
}

message Tmpfs {
  string target = 1;
  string size = 2;
}

message Filesystem {
  option (protoyaml.delegate) = "ref";
  string ref = 1;
}

message Timestamp {
  int64 seconds = 1;
}

message Glob {
  option (protoyaml.delegate) = "pattern";
  string pattern = 1;
}

message Path {
  string value = 1;
}

message Differ {
  DiffType type = 1;
  bool require = 2;
}

enum DiffType {
  DIFF_TYPE_UNSPECIFIED = 0;
  DIFF_TYPE_NONE = 1;
  DIFF_TYPE_METADATA = 2;
}

message Platform {
  string name = 1;
  string os = 2;
  string architecture = 3;
  string variant = 4;
}

message Env {
  repeated NameValue variables = 1;
}

message NameValue {
  string name = 1;
  string value = 2;
}

enum CacheAccess {
  CACHE_ACCESS_UNSPECIFIED = 0;
  CACHE_ACCESS_SHARED = 1;
  CACHE_ACCESS_PRIVATE = 2;
  CACHE_ACCESS_LOCKED = 3;
}

message Cache {
  string target = 1;
  CacheAccess access = 2;
}
