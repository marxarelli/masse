// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: api/build/v1/ops.proto

package v1

import (
	_ "gitlab.wikimedia.org/dduvall/protoyaml/protoyaml"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiffType int32

const (
	DiffType_DIFF_TYPE_UNSPECIFIED DiffType = 0
	DiffType_DIFF_TYPE_NONE        DiffType = 1
	DiffType_DIFF_TYPE_METADATA    DiffType = 2
)

// Enum value maps for DiffType.
var (
	DiffType_name = map[int32]string{
		0: "DIFF_TYPE_UNSPECIFIED",
		1: "DIFF_TYPE_NONE",
		2: "DIFF_TYPE_METADATA",
	}
	DiffType_value = map[string]int32{
		"DIFF_TYPE_UNSPECIFIED": 0,
		"DIFF_TYPE_NONE":        1,
		"DIFF_TYPE_METADATA":    2,
	}
)

func (x DiffType) Enum() *DiffType {
	p := new(DiffType)
	*p = x
	return p
}

func (x DiffType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiffType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_build_v1_ops_proto_enumTypes[0].Descriptor()
}

func (DiffType) Type() protoreflect.EnumType {
	return &file_api_build_v1_ops_proto_enumTypes[0]
}

func (x DiffType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiffType.Descriptor instead.
func (DiffType) EnumDescriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{0}
}

type CacheAccess int32

const (
	CacheAccess_CACHE_ACCESS_UNSPECIFIED CacheAccess = 0
	CacheAccess_CACHE_ACCESS_SHARED      CacheAccess = 1
	CacheAccess_CACHE_ACCESS_PRIVATE     CacheAccess = 2
	CacheAccess_CACHE_ACCESS_LOCKED      CacheAccess = 3
)

// Enum value maps for CacheAccess.
var (
	CacheAccess_name = map[int32]string{
		0: "CACHE_ACCESS_UNSPECIFIED",
		1: "CACHE_ACCESS_SHARED",
		2: "CACHE_ACCESS_PRIVATE",
		3: "CACHE_ACCESS_LOCKED",
	}
	CacheAccess_value = map[string]int32{
		"CACHE_ACCESS_UNSPECIFIED": 0,
		"CACHE_ACCESS_SHARED":      1,
		"CACHE_ACCESS_PRIVATE":     2,
		"CACHE_ACCESS_LOCKED":      3,
	}
)

func (x CacheAccess) Enum() *CacheAccess {
	p := new(CacheAccess)
	*p = x
	return p
}

func (x CacheAccess) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CacheAccess) Descriptor() protoreflect.EnumDescriptor {
	return file_api_build_v1_ops_proto_enumTypes[1].Descriptor()
}

func (CacheAccess) Type() protoreflect.EnumType {
	return &file_api_build_v1_ops_proto_enumTypes[1]
}

func (x CacheAccess) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CacheAccess.Descriptor instead.
func (CacheAccess) EnumDescriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{1}
}

type Op struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Op:
	//
	//	*Op_Local
	//	*Op_Image
	//	*Op_Git
	//	*Op_Run
	//	*Op_Copy
	Op isOp_Op `protobuf_oneof:"op"`
}

func (x *Op) Reset() {
	*x = Op{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Op) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Op) ProtoMessage() {}

func (x *Op) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Op.ProtoReflect.Descriptor instead.
func (*Op) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{0}
}

func (m *Op) GetOp() isOp_Op {
	if m != nil {
		return m.Op
	}
	return nil
}

func (x *Op) GetLocal() *Local {
	if x, ok := x.GetOp().(*Op_Local); ok {
		return x.Local
	}
	return nil
}

func (x *Op) GetImage() *Image {
	if x, ok := x.GetOp().(*Op_Image); ok {
		return x.Image
	}
	return nil
}

func (x *Op) GetGit() *Git {
	if x, ok := x.GetOp().(*Op_Git); ok {
		return x.Git
	}
	return nil
}

func (x *Op) GetRun() *Run {
	if x, ok := x.GetOp().(*Op_Run); ok {
		return x.Run
	}
	return nil
}

func (x *Op) GetCopy() *Copy {
	if x, ok := x.GetOp().(*Op_Copy); ok {
		return x.Copy
	}
	return nil
}

type isOp_Op interface {
	isOp_Op()
}

type Op_Local struct {
	Local *Local `protobuf:"bytes,1,opt,name=local,proto3,oneof"`
}

type Op_Image struct {
	Image *Image `protobuf:"bytes,2,opt,name=image,proto3,oneof"`
}

type Op_Git struct {
	Git *Git `protobuf:"bytes,3,opt,name=git,proto3,oneof"`
}

type Op_Run struct {
	Run *Run `protobuf:"bytes,4,opt,name=run,proto3,oneof"`
}

type Op_Copy struct {
	Copy *Copy `protobuf:"bytes,5,opt,name=copy,proto3,oneof"`
}

func (*Op_Local) isOp_Op() {}

func (*Op_Image) isOp_Op() {}

func (*Op_Git) isOp_Op() {}

func (*Op_Run) isOp_Op() {}

func (*Op_Copy) isOp_Op() {}

type Local struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Options []*Local_Option `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *Local) Reset() {
	*x = Local{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Local) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Local) ProtoMessage() {}

func (x *Local) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Local.ProtoReflect.Descriptor instead.
func (*Local) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{1}
}

func (x *Local) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Local) GetOptions() []*Local_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref     string          `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Options []*Image_Option `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{2}
}

func (x *Image) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *Image) GetOptions() []*Image_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

type Run struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command   string        `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Arguments []string      `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Options   []*Run_Option `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *Run) Reset() {
	*x = Run{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run) ProtoMessage() {}

func (x *Run) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run.ProtoReflect.Descriptor instead.
func (*Run) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{3}
}

func (x *Run) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Run) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *Run) GetOptions() []*Run_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

type Copy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source      string         `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	From        *Filesystem    `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Destination string         `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	Options     []*Copy_Option `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *Copy) Reset() {
	*x = Copy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Copy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Copy) ProtoMessage() {}

func (x *Copy) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Copy.ProtoReflect.Descriptor instead.
func (*Copy) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{4}
}

func (x *Copy) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Copy) GetFrom() *Filesystem {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Copy) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *Copy) GetOptions() []*Copy_Option {
	if x != nil {
		return x.Options
	}
	return nil
}

type Git struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remote string `protobuf:"bytes,1,opt,name=remote,proto3" json:"remote,omitempty"`
	Ref    string `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *Git) Reset() {
	*x = Git{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Git) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Git) ProtoMessage() {}

func (x *Git) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Git.ProtoReflect.Descriptor instead.
func (*Git) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{5}
}

func (x *Git) GetRemote() string {
	if x != nil {
		return x.Remote
	}
	return ""
}

func (x *Git) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip   string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{6}
}

func (x *Host) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Host) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type Mount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target string      `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	From   *Filesystem `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Source string      `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *Mount) Reset() {
	*x = Mount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mount) ProtoMessage() {}

func (x *Mount) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mount.ProtoReflect.Descriptor instead.
func (*Mount) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{7}
}

func (x *Mount) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Mount) GetFrom() *Filesystem {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Mount) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Tmpfs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Size   string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Tmpfs) Reset() {
	*x = Tmpfs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tmpfs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tmpfs) ProtoMessage() {}

func (x *Tmpfs) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tmpfs.ProtoReflect.Descriptor instead.
func (*Tmpfs) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{8}
}

func (x *Tmpfs) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Tmpfs) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type Filesystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *Filesystem) Reset() {
	*x = Filesystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filesystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem) ProtoMessage() {}

func (x *Filesystem) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem.ProtoReflect.Descriptor instead.
func (*Filesystem) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{9}
}

func (x *Filesystem) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{10}
}

func (x *Timestamp) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type Glob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pattern string `protobuf:"bytes,1,opt,name=pattern,proto3" json:"pattern,omitempty"`
}

func (x *Glob) Reset() {
	*x = Glob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Glob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Glob) ProtoMessage() {}

func (x *Glob) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Glob.ProtoReflect.Descriptor instead.
func (*Glob) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{11}
}

func (x *Glob) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

type Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Path) Reset() {
	*x = Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{12}
}

func (x *Path) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Differ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    DiffType `protobuf:"varint,1,opt,name=type,proto3,enum=wikimedia.dduvall.phyton.DiffType" json:"type,omitempty"`
	Require bool     `protobuf:"varint,2,opt,name=require,proto3" json:"require,omitempty"`
}

func (x *Differ) Reset() {
	*x = Differ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Differ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Differ) ProtoMessage() {}

func (x *Differ) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Differ.ProtoReflect.Descriptor instead.
func (*Differ) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{13}
}

func (x *Differ) GetType() DiffType {
	if x != nil {
		return x.Type
	}
	return DiffType_DIFF_TYPE_UNSPECIFIED
}

func (x *Differ) GetRequire() bool {
	if x != nil {
		return x.Require
	}
	return false
}

type Platform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Os           string `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	Architecture string `protobuf:"bytes,3,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Variant      string `protobuf:"bytes,4,opt,name=variant,proto3" json:"variant,omitempty"`
}

func (x *Platform) Reset() {
	*x = Platform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform) ProtoMessage() {}

func (x *Platform) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform.ProtoReflect.Descriptor instead.
func (*Platform) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{14}
}

func (x *Platform) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Platform) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Platform) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *Platform) GetVariant() string {
	if x != nil {
		return x.Variant
	}
	return ""
}

type Env struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Variables []*NameValue `protobuf:"bytes,1,rep,name=variables,proto3" json:"variables,omitempty"`
}

func (x *Env) Reset() {
	*x = Env{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Env) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Env) ProtoMessage() {}

func (x *Env) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Env.ProtoReflect.Descriptor instead.
func (*Env) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{15}
}

func (x *Env) GetVariables() []*NameValue {
	if x != nil {
		return x.Variables
	}
	return nil
}

type NameValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NameValue) Reset() {
	*x = NameValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameValue) ProtoMessage() {}

func (x *NameValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameValue.ProtoReflect.Descriptor instead.
func (*NameValue) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{16}
}

func (x *NameValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NameValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Cache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target string      `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Access CacheAccess `protobuf:"varint,2,opt,name=access,proto3,enum=wikimedia.dduvall.phyton.CacheAccess" json:"access,omitempty"`
}

func (x *Cache) Reset() {
	*x = Cache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cache) ProtoMessage() {}

func (x *Cache) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cache.ProtoReflect.Descriptor instead.
func (*Cache) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{17}
}

func (x *Cache) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Cache) GetAccess() CacheAccess {
	if x != nil {
		return x.Access
	}
	return CacheAccess_CACHE_ACCESS_UNSPECIFIED
}

type Local_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Opt:
	//
	//	*Local_Option_Include
	//	*Local_Option_Exclude
	//	*Local_Option_FollowPath
	//	*Local_Option_CacheKeyHint
	//	*Local_Option_Differ
	Opt isLocal_Option_Opt `protobuf_oneof:"opt"`
}

func (x *Local_Option) Reset() {
	*x = Local_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Local_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Local_Option) ProtoMessage() {}

func (x *Local_Option) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Local_Option.ProtoReflect.Descriptor instead.
func (*Local_Option) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{1, 0}
}

func (m *Local_Option) GetOpt() isLocal_Option_Opt {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (x *Local_Option) GetInclude() *Glob {
	if x, ok := x.GetOpt().(*Local_Option_Include); ok {
		return x.Include
	}
	return nil
}

func (x *Local_Option) GetExclude() *Glob {
	if x, ok := x.GetOpt().(*Local_Option_Exclude); ok {
		return x.Exclude
	}
	return nil
}

func (x *Local_Option) GetFollowPath() *Path {
	if x, ok := x.GetOpt().(*Local_Option_FollowPath); ok {
		return x.FollowPath
	}
	return nil
}

func (x *Local_Option) GetCacheKeyHint() string {
	if x, ok := x.GetOpt().(*Local_Option_CacheKeyHint); ok {
		return x.CacheKeyHint
	}
	return ""
}

func (x *Local_Option) GetDiffer() *Differ {
	if x, ok := x.GetOpt().(*Local_Option_Differ); ok {
		return x.Differ
	}
	return nil
}

type isLocal_Option_Opt interface {
	isLocal_Option_Opt()
}

type Local_Option_Include struct {
	Include *Glob `protobuf:"bytes,1,opt,name=include,proto3,oneof"`
}

type Local_Option_Exclude struct {
	Exclude *Glob `protobuf:"bytes,2,opt,name=exclude,proto3,oneof"`
}

type Local_Option_FollowPath struct {
	FollowPath *Path `protobuf:"bytes,3,opt,name=follow_path,json=followPath,proto3,oneof"`
}

type Local_Option_CacheKeyHint struct {
	CacheKeyHint string `protobuf:"bytes,4,opt,name=cache_key_hint,json=cacheKeyHint,proto3,oneof"`
}

type Local_Option_Differ struct {
	Differ *Differ `protobuf:"bytes,5,opt,name=differ,proto3,oneof"`
}

func (*Local_Option_Include) isLocal_Option_Opt() {}

func (*Local_Option_Exclude) isLocal_Option_Opt() {}

func (*Local_Option_FollowPath) isLocal_Option_Opt() {}

func (*Local_Option_CacheKeyHint) isLocal_Option_Opt() {}

func (*Local_Option_Differ) isLocal_Option_Opt() {}

type Image_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Opt:
	//
	//	*Image_Option_Platform
	//	*Image_Option_LayerLimit
	Opt isImage_Option_Opt `protobuf_oneof:"opt"`
}

func (x *Image_Option) Reset() {
	*x = Image_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image_Option) ProtoMessage() {}

func (x *Image_Option) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image_Option.ProtoReflect.Descriptor instead.
func (*Image_Option) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{2, 0}
}

func (m *Image_Option) GetOpt() isImage_Option_Opt {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (x *Image_Option) GetPlatform() *Platform {
	if x, ok := x.GetOpt().(*Image_Option_Platform); ok {
		return x.Platform
	}
	return nil
}

func (x *Image_Option) GetLayerLimit() uint32 {
	if x, ok := x.GetOpt().(*Image_Option_LayerLimit); ok {
		return x.LayerLimit
	}
	return 0
}

type isImage_Option_Opt interface {
	isImage_Option_Opt()
}

type Image_Option_Platform struct {
	Platform *Platform `protobuf:"bytes,1,opt,name=platform,proto3,oneof"`
}

type Image_Option_LayerLimit struct {
	LayerLimit uint32 `protobuf:"varint,2,opt,name=layer_limit,json=layerLimit,proto3,oneof"`
}

func (*Image_Option_Platform) isImage_Option_Opt() {}

func (*Image_Option_LayerLimit) isImage_Option_Opt() {}

type Run_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Opt:
	//
	//	*Run_Option_Host
	//	*Run_Option_Mount
	//	*Run_Option_Env
	//	*Run_Option_Cache
	//	*Run_Option_Tmpfs
	//	*Run_Option_Readonly
	Opt isRun_Option_Opt `protobuf_oneof:"opt"`
}

func (x *Run_Option) Reset() {
	*x = Run_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Run_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run_Option) ProtoMessage() {}

func (x *Run_Option) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run_Option.ProtoReflect.Descriptor instead.
func (*Run_Option) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{3, 0}
}

func (m *Run_Option) GetOpt() isRun_Option_Opt {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (x *Run_Option) GetHost() *Host {
	if x, ok := x.GetOpt().(*Run_Option_Host); ok {
		return x.Host
	}
	return nil
}

func (x *Run_Option) GetMount() *Mount {
	if x, ok := x.GetOpt().(*Run_Option_Mount); ok {
		return x.Mount
	}
	return nil
}

func (x *Run_Option) GetEnv() *Env {
	if x, ok := x.GetOpt().(*Run_Option_Env); ok {
		return x.Env
	}
	return nil
}

func (x *Run_Option) GetCache() *Cache {
	if x, ok := x.GetOpt().(*Run_Option_Cache); ok {
		return x.Cache
	}
	return nil
}

func (x *Run_Option) GetTmpfs() *Tmpfs {
	if x, ok := x.GetOpt().(*Run_Option_Tmpfs); ok {
		return x.Tmpfs
	}
	return nil
}

func (x *Run_Option) GetReadonly() bool {
	if x, ok := x.GetOpt().(*Run_Option_Readonly); ok {
		return x.Readonly
	}
	return false
}

type isRun_Option_Opt interface {
	isRun_Option_Opt()
}

type Run_Option_Host struct {
	Host *Host `protobuf:"bytes,1,opt,name=host,proto3,oneof"`
}

type Run_Option_Mount struct {
	Mount *Mount `protobuf:"bytes,2,opt,name=mount,proto3,oneof"`
}

type Run_Option_Env struct {
	Env *Env `protobuf:"bytes,3,opt,name=env,proto3,oneof"`
}

type Run_Option_Cache struct {
	Cache *Cache `protobuf:"bytes,4,opt,name=cache,proto3,oneof"`
}

type Run_Option_Tmpfs struct {
	Tmpfs *Tmpfs `protobuf:"bytes,5,opt,name=tmpfs,proto3,oneof"`
}

type Run_Option_Readonly struct {
	Readonly bool `protobuf:"varint,6,opt,name=readonly,proto3,oneof"`
}

func (*Run_Option_Host) isRun_Option_Opt() {}

func (*Run_Option_Mount) isRun_Option_Opt() {}

func (*Run_Option_Env) isRun_Option_Opt() {}

func (*Run_Option_Cache) isRun_Option_Opt() {}

func (*Run_Option_Tmpfs) isRun_Option_Opt() {}

func (*Run_Option_Readonly) isRun_Option_Opt() {}

type Copy_Option struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Opt:
	//
	//	*Copy_Option_Ctime
	//	*Copy_Option_User
	//	*Copy_Option_Uid
	//	*Copy_Option_Group
	//	*Copy_Option_Gid
	//	*Copy_Option_Mode
	//	*Copy_Option_FollowSymlinks
	//	*Copy_Option_CopyDirContent
	//	*Copy_Option_Include
	//	*Copy_Option_Exclude
	Opt isCopy_Option_Opt `protobuf_oneof:"opt"`
}

func (x *Copy_Option) Reset() {
	*x = Copy_Option{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_build_v1_ops_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Copy_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Copy_Option) ProtoMessage() {}

func (x *Copy_Option) ProtoReflect() protoreflect.Message {
	mi := &file_api_build_v1_ops_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Copy_Option.ProtoReflect.Descriptor instead.
func (*Copy_Option) Descriptor() ([]byte, []int) {
	return file_api_build_v1_ops_proto_rawDescGZIP(), []int{4, 0}
}

func (m *Copy_Option) GetOpt() isCopy_Option_Opt {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (x *Copy_Option) GetCtime() *Timestamp {
	if x, ok := x.GetOpt().(*Copy_Option_Ctime); ok {
		return x.Ctime
	}
	return nil
}

func (x *Copy_Option) GetUser() string {
	if x, ok := x.GetOpt().(*Copy_Option_User); ok {
		return x.User
	}
	return ""
}

func (x *Copy_Option) GetUid() int32 {
	if x, ok := x.GetOpt().(*Copy_Option_Uid); ok {
		return x.Uid
	}
	return 0
}

func (x *Copy_Option) GetGroup() string {
	if x, ok := x.GetOpt().(*Copy_Option_Group); ok {
		return x.Group
	}
	return ""
}

func (x *Copy_Option) GetGid() int32 {
	if x, ok := x.GetOpt().(*Copy_Option_Gid); ok {
		return x.Gid
	}
	return 0
}

func (x *Copy_Option) GetMode() uint32 {
	if x, ok := x.GetOpt().(*Copy_Option_Mode); ok {
		return x.Mode
	}
	return 0
}

func (x *Copy_Option) GetFollowSymlinks() bool {
	if x, ok := x.GetOpt().(*Copy_Option_FollowSymlinks); ok {
		return x.FollowSymlinks
	}
	return false
}

func (x *Copy_Option) GetCopyDirContent() bool {
	if x, ok := x.GetOpt().(*Copy_Option_CopyDirContent); ok {
		return x.CopyDirContent
	}
	return false
}

func (x *Copy_Option) GetInclude() *Glob {
	if x, ok := x.GetOpt().(*Copy_Option_Include); ok {
		return x.Include
	}
	return nil
}

func (x *Copy_Option) GetExclude() *Glob {
	if x, ok := x.GetOpt().(*Copy_Option_Exclude); ok {
		return x.Exclude
	}
	return nil
}

type isCopy_Option_Opt interface {
	isCopy_Option_Opt()
}

type Copy_Option_Ctime struct {
	Ctime *Timestamp `protobuf:"bytes,1,opt,name=ctime,proto3,oneof"`
}

type Copy_Option_User struct {
	User string `protobuf:"bytes,2,opt,name=user,proto3,oneof"`
}

type Copy_Option_Uid struct {
	Uid int32 `protobuf:"varint,3,opt,name=uid,proto3,oneof"`
}

type Copy_Option_Group struct {
	Group string `protobuf:"bytes,4,opt,name=group,proto3,oneof"`
}

type Copy_Option_Gid struct {
	Gid int32 `protobuf:"varint,5,opt,name=gid,proto3,oneof"`
}

type Copy_Option_Mode struct {
	Mode uint32 `protobuf:"varint,6,opt,name=mode,proto3,oneof"`
}

type Copy_Option_FollowSymlinks struct {
	FollowSymlinks bool `protobuf:"varint,7,opt,name=follow_symlinks,json=followSymlinks,proto3,oneof"`
}

type Copy_Option_CopyDirContent struct {
	CopyDirContent bool `protobuf:"varint,8,opt,name=copy_dir_content,json=copyDirContent,proto3,oneof"`
}

type Copy_Option_Include struct {
	Include *Glob `protobuf:"bytes,9,opt,name=include,proto3,oneof"`
}

type Copy_Option_Exclude struct {
	Exclude *Glob `protobuf:"bytes,10,opt,name=exclude,proto3,oneof"`
}

func (*Copy_Option_Ctime) isCopy_Option_Opt() {}

func (*Copy_Option_User) isCopy_Option_Opt() {}

func (*Copy_Option_Uid) isCopy_Option_Opt() {}

func (*Copy_Option_Group) isCopy_Option_Opt() {}

func (*Copy_Option_Gid) isCopy_Option_Opt() {}

func (*Copy_Option_Mode) isCopy_Option_Opt() {}

func (*Copy_Option_FollowSymlinks) isCopy_Option_Opt() {}

func (*Copy_Option_CopyDirContent) isCopy_Option_Opt() {}

func (*Copy_Option_Include) isCopy_Option_Opt() {}

func (*Copy_Option_Exclude) isCopy_Option_Opt() {}

var File_api_build_v1_ops_proto protoreflect.FileDescriptor

var file_api_build_v1_ops_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6f,
	0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74,
	0x6f, 0x6e, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x79, 0x61, 0x6d, 0x6c, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x02, 0x0a, 0x02,
	0x4f, 0x70, 0x12, 0x37, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64,
	0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x69, 0x6b,
	0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70,
	0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x67, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64,
	0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x47, 0x69, 0x74,
	0x48, 0x00, 0x52, 0x03, 0x67, 0x69, 0x74, 0x12, 0x31, 0x0a, 0x03, 0x72, 0x75, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e,
	0x52, 0x75, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x72, 0x75, 0x6e, 0x12, 0x34, 0x0a, 0x04, 0x63, 0x6f,
	0x70, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79,
	0x74, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x70, 0x79,
	0x3a, 0x07, 0xea, 0xfe, 0x8b, 0x21, 0x02, 0x6f, 0x70, 0x42, 0x0b, 0x0a, 0x02, 0x6f, 0x70, 0x12,
	0x05, 0xe8, 0xfe, 0x8b, 0x21, 0x02, 0x22, 0x9f, 0x03, 0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xbf, 0x02, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3a, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64,
	0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x3a, 0x0a,
	0x07, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61,
	0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x48, 0x00,
	0x52, 0x07, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61,
	0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x48, 0x00,
	0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4b, 0x65, 0x79,
	0x48, 0x69, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e,
	0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72,
	0x3a, 0x08, 0xea, 0xfe, 0x8b, 0x21, 0x03, 0x6f, 0x70, 0x74, 0x42, 0x0c, 0x0a, 0x03, 0x6f, 0x70,
	0x74, 0x12, 0x05, 0xe8, 0xfe, 0x8b, 0x21, 0x02, 0x22, 0xe3, 0x01, 0x0a, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x72, 0x65, 0x66, 0x12, 0x40, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x85, 0x01, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x40, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x21, 0x0a, 0x0b, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x3a, 0x08, 0xea, 0xfe, 0x8b, 0x21, 0x03, 0x6f, 0x70, 0x74,
	0x42, 0x0c, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x05, 0xe8, 0xfe, 0x8b, 0x21, 0x02, 0x22, 0xd2,
	0x03, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3e,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76,
	0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6e, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xd2,
	0x02, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74,
	0x6f, 0x6e, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x05, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61,
	0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x05, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e,
	0x2e, 0x45, 0x6e, 0x76, 0x48, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x37, 0x0a, 0x05, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x69, 0x6b,
	0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70,
	0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x48, 0x00, 0x52, 0x05, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x74, 0x6d, 0x70, 0x66, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x54,
	0x6d, 0x70, 0x66, 0x73, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6d, 0x70, 0x66, 0x73, 0x12, 0x1c, 0x0a,
	0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x3a, 0x08, 0xea, 0xfe, 0x8b,
	0x21, 0x03, 0x6f, 0x70, 0x74, 0x42, 0x0c, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x05, 0xe8, 0xfe,
	0x8b, 0x21, 0x02, 0x22, 0xd6, 0x04, 0x0a, 0x04, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64,
	0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3f, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64,
	0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x70,
	0x79, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x98, 0x03, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x05,
	0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x69,
	0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e,
	0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x00, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x03, 0x67,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x0f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f,
	0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x70, 0x79, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f,
	0x70, 0x79, 0x44, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x07,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c,
	0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x48, 0x00, 0x52,
	0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x69, 0x6b, 0x69,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68,
	0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x3a, 0x08, 0xea, 0xfe, 0x8b, 0x21, 0x03, 0x6f, 0x70, 0x74, 0x42, 0x0c,
	0x0a, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x05, 0xe8, 0xfe, 0x8b, 0x21, 0x02, 0x22, 0x2f, 0x0a, 0x03,
	0x47, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x2a, 0x0a,
	0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x71, 0x0a, 0x05, 0x4d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79,
	0x74, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x33, 0x0a, 0x05,
	0x54, 0x6d, 0x70, 0x66, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0x28, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65,
	0x66, 0x3a, 0x08, 0xea, 0xfe, 0x8b, 0x21, 0x03, 0x72, 0x65, 0x66, 0x22, 0x25, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x22, 0x2e, 0x0a, 0x04, 0x47, 0x6c, 0x6f, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x3a, 0x0c, 0xea, 0xfe, 0x8b, 0x21, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x22, 0x1c, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x5a, 0x0a, 0x06, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79,
	0x74, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x22, 0x6c, 0x0a, 0x08,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x03, 0x45, 0x6e,
	0x76, 0x12, 0x41, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5e, 0x0a, 0x05, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x06,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x77,
	0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c,
	0x2e, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2a, 0x51, 0x0a, 0x08, 0x44,
	0x69, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x49, 0x46, 0x46, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x49, 0x46, 0x46, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x49, 0x46, 0x46, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x02, 0x2a, 0x77,
	0x0a, 0x0b, 0x43, 0x61, 0x63, 0x68, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a,
	0x18, 0x43, 0x41, 0x43, 0x48, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x43,
	0x41, 0x43, 0x48, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x48, 0x41, 0x52,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x41, 0x43, 0x48, 0x45, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x17,
	0x0a, 0x13, 0x43, 0x41, 0x43, 0x48, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x4c,
	0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x6c, 0x61,
	0x62, 0x2e, 0x77, 0x69, 0x6b, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x64, 0x64, 0x75, 0x76, 0x61, 0x6c, 0x6c, 0x2f, 0x70, 0x68, 0x79, 0x74, 0x6f, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_build_v1_ops_proto_rawDescOnce sync.Once
	file_api_build_v1_ops_proto_rawDescData = file_api_build_v1_ops_proto_rawDesc
)

func file_api_build_v1_ops_proto_rawDescGZIP() []byte {
	file_api_build_v1_ops_proto_rawDescOnce.Do(func() {
		file_api_build_v1_ops_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_build_v1_ops_proto_rawDescData)
	})
	return file_api_build_v1_ops_proto_rawDescData
}

var file_api_build_v1_ops_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_build_v1_ops_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_build_v1_ops_proto_goTypes = []interface{}{
	(DiffType)(0),        // 0: wikimedia.dduvall.phyton.DiffType
	(CacheAccess)(0),     // 1: wikimedia.dduvall.phyton.CacheAccess
	(*Op)(nil),           // 2: wikimedia.dduvall.phyton.Op
	(*Local)(nil),        // 3: wikimedia.dduvall.phyton.Local
	(*Image)(nil),        // 4: wikimedia.dduvall.phyton.Image
	(*Run)(nil),          // 5: wikimedia.dduvall.phyton.Run
	(*Copy)(nil),         // 6: wikimedia.dduvall.phyton.Copy
	(*Git)(nil),          // 7: wikimedia.dduvall.phyton.Git
	(*Host)(nil),         // 8: wikimedia.dduvall.phyton.Host
	(*Mount)(nil),        // 9: wikimedia.dduvall.phyton.Mount
	(*Tmpfs)(nil),        // 10: wikimedia.dduvall.phyton.Tmpfs
	(*Filesystem)(nil),   // 11: wikimedia.dduvall.phyton.Filesystem
	(*Timestamp)(nil),    // 12: wikimedia.dduvall.phyton.Timestamp
	(*Glob)(nil),         // 13: wikimedia.dduvall.phyton.Glob
	(*Path)(nil),         // 14: wikimedia.dduvall.phyton.Path
	(*Differ)(nil),       // 15: wikimedia.dduvall.phyton.Differ
	(*Platform)(nil),     // 16: wikimedia.dduvall.phyton.Platform
	(*Env)(nil),          // 17: wikimedia.dduvall.phyton.Env
	(*NameValue)(nil),    // 18: wikimedia.dduvall.phyton.NameValue
	(*Cache)(nil),        // 19: wikimedia.dduvall.phyton.Cache
	(*Local_Option)(nil), // 20: wikimedia.dduvall.phyton.Local.Option
	(*Image_Option)(nil), // 21: wikimedia.dduvall.phyton.Image.Option
	(*Run_Option)(nil),   // 22: wikimedia.dduvall.phyton.Run.Option
	(*Copy_Option)(nil),  // 23: wikimedia.dduvall.phyton.Copy.Option
}
var file_api_build_v1_ops_proto_depIdxs = []int32{
	3,  // 0: wikimedia.dduvall.phyton.Op.local:type_name -> wikimedia.dduvall.phyton.Local
	4,  // 1: wikimedia.dduvall.phyton.Op.image:type_name -> wikimedia.dduvall.phyton.Image
	7,  // 2: wikimedia.dduvall.phyton.Op.git:type_name -> wikimedia.dduvall.phyton.Git
	5,  // 3: wikimedia.dduvall.phyton.Op.run:type_name -> wikimedia.dduvall.phyton.Run
	6,  // 4: wikimedia.dduvall.phyton.Op.copy:type_name -> wikimedia.dduvall.phyton.Copy
	20, // 5: wikimedia.dduvall.phyton.Local.options:type_name -> wikimedia.dduvall.phyton.Local.Option
	21, // 6: wikimedia.dduvall.phyton.Image.options:type_name -> wikimedia.dduvall.phyton.Image.Option
	22, // 7: wikimedia.dduvall.phyton.Run.options:type_name -> wikimedia.dduvall.phyton.Run.Option
	11, // 8: wikimedia.dduvall.phyton.Copy.from:type_name -> wikimedia.dduvall.phyton.Filesystem
	23, // 9: wikimedia.dduvall.phyton.Copy.options:type_name -> wikimedia.dduvall.phyton.Copy.Option
	11, // 10: wikimedia.dduvall.phyton.Mount.from:type_name -> wikimedia.dduvall.phyton.Filesystem
	0,  // 11: wikimedia.dduvall.phyton.Differ.type:type_name -> wikimedia.dduvall.phyton.DiffType
	18, // 12: wikimedia.dduvall.phyton.Env.variables:type_name -> wikimedia.dduvall.phyton.NameValue
	1,  // 13: wikimedia.dduvall.phyton.Cache.access:type_name -> wikimedia.dduvall.phyton.CacheAccess
	13, // 14: wikimedia.dduvall.phyton.Local.Option.include:type_name -> wikimedia.dduvall.phyton.Glob
	13, // 15: wikimedia.dduvall.phyton.Local.Option.exclude:type_name -> wikimedia.dduvall.phyton.Glob
	14, // 16: wikimedia.dduvall.phyton.Local.Option.follow_path:type_name -> wikimedia.dduvall.phyton.Path
	15, // 17: wikimedia.dduvall.phyton.Local.Option.differ:type_name -> wikimedia.dduvall.phyton.Differ
	16, // 18: wikimedia.dduvall.phyton.Image.Option.platform:type_name -> wikimedia.dduvall.phyton.Platform
	8,  // 19: wikimedia.dduvall.phyton.Run.Option.host:type_name -> wikimedia.dduvall.phyton.Host
	9,  // 20: wikimedia.dduvall.phyton.Run.Option.mount:type_name -> wikimedia.dduvall.phyton.Mount
	17, // 21: wikimedia.dduvall.phyton.Run.Option.env:type_name -> wikimedia.dduvall.phyton.Env
	19, // 22: wikimedia.dduvall.phyton.Run.Option.cache:type_name -> wikimedia.dduvall.phyton.Cache
	10, // 23: wikimedia.dduvall.phyton.Run.Option.tmpfs:type_name -> wikimedia.dduvall.phyton.Tmpfs
	12, // 24: wikimedia.dduvall.phyton.Copy.Option.ctime:type_name -> wikimedia.dduvall.phyton.Timestamp
	13, // 25: wikimedia.dduvall.phyton.Copy.Option.include:type_name -> wikimedia.dduvall.phyton.Glob
	13, // 26: wikimedia.dduvall.phyton.Copy.Option.exclude:type_name -> wikimedia.dduvall.phyton.Glob
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_api_build_v1_ops_proto_init() }
func file_api_build_v1_ops_proto_init() {
	if File_api_build_v1_ops_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_build_v1_ops_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Op); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Local); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Run); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Copy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Git); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tmpfs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filesystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Glob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Differ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Env); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Local_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Run_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_build_v1_ops_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Copy_Option); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_build_v1_ops_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Op_Local)(nil),
		(*Op_Image)(nil),
		(*Op_Git)(nil),
		(*Op_Run)(nil),
		(*Op_Copy)(nil),
	}
	file_api_build_v1_ops_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*Local_Option_Include)(nil),
		(*Local_Option_Exclude)(nil),
		(*Local_Option_FollowPath)(nil),
		(*Local_Option_CacheKeyHint)(nil),
		(*Local_Option_Differ)(nil),
	}
	file_api_build_v1_ops_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*Image_Option_Platform)(nil),
		(*Image_Option_LayerLimit)(nil),
	}
	file_api_build_v1_ops_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*Run_Option_Host)(nil),
		(*Run_Option_Mount)(nil),
		(*Run_Option_Env)(nil),
		(*Run_Option_Cache)(nil),
		(*Run_Option_Tmpfs)(nil),
		(*Run_Option_Readonly)(nil),
	}
	file_api_build_v1_ops_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*Copy_Option_Ctime)(nil),
		(*Copy_Option_User)(nil),
		(*Copy_Option_Uid)(nil),
		(*Copy_Option_Group)(nil),
		(*Copy_Option_Gid)(nil),
		(*Copy_Option_Mode)(nil),
		(*Copy_Option_FollowSymlinks)(nil),
		(*Copy_Option_CopyDirContent)(nil),
		(*Copy_Option_Include)(nil),
		(*Copy_Option_Exclude)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_build_v1_ops_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_build_v1_ops_proto_goTypes,
		DependencyIndexes: file_api_build_v1_ops_proto_depIdxs,
		EnumInfos:         file_api_build_v1_ops_proto_enumTypes,
		MessageInfos:      file_api_build_v1_ops_proto_msgTypes,
	}.Build()
	File_api_build_v1_ops_proto = out.File
	file_api_build_v1_ops_proto_rawDesc = nil
	file_api_build_v1_ops_proto_goTypes = nil
	file_api_build_v1_ops_proto_depIdxs = nil
}
